---
layout: post
title:  "vim-commands"
date:   2018-06-22 22:22:01 +0500
categories: jekyll update
---

Заметки по командам vim в процессе чтения книги "Vim".

### Основные команды

# Передвижение
* `hjkl` - передвижение
*  `wW bB eE` - вперёд[назад][вперёд в конец]  на слово, всё кроме пробелов
* `0 ^ n| $` - первый символ, начало непробельных, n-ый, конец
* `() {} [[]]` в начало текущего[следующего] предложения, абзаца, раздела
* `:number numberG` - переход на number-строку
* `''` - место последней правки, перед передвижением
* `m[a-z] 'a` - метка,  вернуться к метке `a`

# Особые
* `HL` - top screen, bottom screen
* `J` - соединить следующую строку с текущей
* `K` - man page

# Переход в insert:
* `iI` -  insert режим, insert с начала строки
* `aA` - append - редактирование после текущего символа, с конца строки
* `oO` - добавить строку после, перед текущей перейти в insert
* `sS` - subst - удалить символ, строку перейти в insert
* `cС` - change - удалить что-то и перейти в insert, удалить до конца строки

# Остаёмся в текущем режиме:
* `rR` - заменить один символ, несколько символов подряд
* `xX` - удалить символ, предыдущий символ
* `dD` - удалить что-то, удалить до конца строки

# Замечания:
* Все команды можно повторять, ставишь перед ней цифру. При этом если команда, переходит в insert, то повторение срабатывает после выхода из него.
* Например, можно ввести `iao` и получить сразу много одинаковых строк. Также с остальными.
* `r` - заменить все буквы на одну, но не больше длины строки, c `xd` - если вводишь больше символов чем встроке, меняет всю строку, что логично.
* `sc` - не повторяют строки, но повторяют удаление на несколько сиволов или строк
* для команд `cd` двойное нажатие применяет её ко всей строке
* `c и d и y` - эти команды работают с любыми перемещениями:
    * `cH cL c+ ` - верх, низ, следующей строки
    * `2c)` - второе преложение изменить
    * `d/pattern` - до шаблона `patter`
    * `c/n` - до следующего вхождения
    * `cG` - конца файла
    * `d13G` -  13 строки

# Вставка и копирование:
* `pP` - вставить после, до
* `yY` - скопировать что-то, строку ( `yy`=`Y`)

# Отмена
* `uU` - отмена, возврат состояния строки, если курсор не перемещался на другую
* `^R` - отмена отмены

# Прокрутка экрана
* `^f,^d;^b^u` - вперёд;назад экран, полэкрана
* `zENTER z. z-` - текущая строка вверх, середина, вниз без смещения курсора

# Поиск
* `/?` - поиск вперёд, назад
* `nN` - перемещение по найденному вперёд, назад
* `*` - поиск слова под курсором

* `/\(bar\)\@!` - поиск следующей строки не содержащей `bar`
* `:g/pattern/` - вывод только подходящих строк
* `:v/pattern/` - вывод только неподходящих строк


* `ft[x]FT` - найти следующее, предыдущее вхождение символа x в строке
* `;,` - перемещение по найденному вперёд, назад
##TODO - поиск по выделенному

## Буферы
* `"ay` - скопировать в буфер `a`
Также с вставить `p`, удалить в буфер `d`
* буферы 0-9 - последние 10 удалений, копирований
`:registers` - посмотреть буферы (0-9,a-z)
`+*` - системные буферы, используется последний использованный(требуется +gvim)

## Метки(никогда не пользовался)
* `ma` - метка `a`
контекст - последнее изменение
* `'a` `\`a` - возвращение на метку[контекст], строку с меткой
* `''`, `\`\`` - возращение на последнюю метку[контекст], начало строки

5 глава
